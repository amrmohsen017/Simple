@model PM.Models.institute

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/new_layout.cshtml";
}


<div class="container" data-layout="container">


    <div class="row g-3 mb-3">
        <div class="col-md-6 col-xxl-3">

            <h2>Create</h2>


            @using (Html.BeginForm())
            {
@Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>institute</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.institutename, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.institutename, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.institutename, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.institute_fulladdress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.institute_fulladdress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.institute_fulladdress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.telephone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.telephone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.type_id, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("type_id", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.type_id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.department_id, "department_id", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("department_id", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.department_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.institute_address.governmnet.governmentname, "government name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("governmentName", null, "Select government name", htmlAttributes: new
                            {

                                id = "governmentName",
                                @class = "form-control"
                            })
                            @Html.ValidationMessageFor(model => model.institute_address.governmnet.governmentname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.institute_address.city.cityname, "city name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("cityName", null, "Select city name", htmlAttributes: new { id = "cityName", @disabled = true, @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.institute_address.city.cityname, "", new
                            {


                                @class = "text-danger",

                            })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.institute_address.station.stationname, "station name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("stationName", null, "Select station name", htmlAttributes: new
                            {


                                id = "stationName",


                                @class = "form-control",
                                @disabled = true
                            })
                            @Html.ValidationMessageFor(model => model.institute_address.station.stationname, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>}

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

        </div>
    </div>
</div>

<script>



    document.getElementById("governmentName").onchange = function () {

        if (!$("#governmentName").val()) {
            $("#cityName").prop("disabled", true);
            $('#stationName').prop("disabled", true);
        }


        $.ajax({
            url: `/api/cities/${$("#governmentName").val()}`, success: function (result) {


                let dropdown = $('#cityName').empty().append('<option value="null"> Select city name </option>');

                result.forEach(i => {
                    dropdown.append('<option value="' + i.$id + '">' + i.cityname + '</option>');
                })

                //$("#cityName").val(result);

                $("#cityName").prop("disabled", false);

            }
        });


    };

    document.getElementById("cityName").onchange = function () {
        if (!$("#governmentName").val()) {
            $("#cityName").prop("disabled", true);
            $('#stationName').prop("disabled", true);
        }

        $.ajax({
            url: `/api/stations/${$("#cityName").val()}`, success: function (result) {

                let dropdown = $('#stationName').empty().append('<option value="null" > Select station name </option>');

                result.forEach(i => {
                    dropdown.append('<option value="' + i.$id + '">' + i.stationname + '</option>');
                })


                //$("#stationName").val(result);

                $("#stationName").prop("disabled", false);

            }
        });



    };



</script>



            @section Scripts {


                @Scripts.Render("~/bundles/jqueryval")
            }




